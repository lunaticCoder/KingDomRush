{"version":3,"sources":["assets/scripts/common/move.ts"],"names":[],"mappings":";;;;;;AAAA;IAiBI;;OAEG;IACH,cAAY,IAAa;QAlBjB,SAAI,GAAY,IAAI,CAAC;QAE7B,QAAQ;QACA,aAAQ,GAAY,IAAI,CAAC;QACzB,aAAQ,GAAW,IAAI,CAAC;QACxB,aAAQ,GAAa,IAAI,CAAC;QAElC;;WAEG;QACK,OAAE,GAAW,CAAC,CAAC;QAEvB,QAAQ;QACA,cAAS,GAAY,KAAK,CAAC;QAM/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACH,qBAAM,GAAN,UAAO,QAAiB,EAAE,CAAS,EAAE,QAAyB;QAAzB,yBAAA,EAAA,eAAyB;QAC1D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,uBAAQ,GAAR;QACI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,0BAAW,GAAX,UAAY,EAAU;QAClB,IAAI,CAAC,IAAI,CAAC,SAAS;YACf,OAAO;QACX,OAAO;QACP,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI;gBACtB,IAAI,CAAC,QAAQ,EAAE,CAAC;YACpB,OAAO;SACV;QAED,IAAI,IAAI,GAAW,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;QACtC,IAAI,CAAC,GAAY,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;QACvE,IAAI,IAAI,GAAY,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAE5B,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC;IAClB,CAAC;IACL,WAAC;AAAD,CA9DA,AA8DC,IAAA","file":"","sourceRoot":"/","sourcesContent":["export default class Move {\n\n    private host: cc.Node = null;\n\n    /* 数据 */\n    private distance: cc.Vec2 = null;\n    private duration: number = null;\n    private callBack: Function = null;\n\n    /**\n     * 计时\n     */\n    private ct: number = 0;\n\n    /* 控制 */\n    private startMove: boolean = false;\n\n    /**\n     * 移动组件。必须将refrshMove()在update()中调用\n     */\n    constructor(host: cc.Node) {\n        this.host = host;\n    }\n\n    /**\n     * @param distance 移动相对距离\n     * @param t 时间\n     * @param callBack 回调函数\n     */\n    moveTo(distance: cc.Vec2, t: number, callBack: Function = null) {\n        this.distance = distance\n        this.duration = t;\n        this.callBack = callBack;\n        this.ct = 0;\n        this.startMove = true;\n    }\n\n    stopMove() {\n        this.startMove = false;\n    }\n\n    /**\n     * 需在update()里调用\n     */\n    refreshMove(dt: number) {\n        if (!this.startMove)\n            return;\n        //到达目的地\n        if (this.ct >= this.duration) {\n            this.stopMove();\n            if (this.callBack !== null)\n                this.callBack();\n            return;\n        }\n\n        let rate: number = dt / this.duration;\n        let l: cc.Vec2 = cc.v2(this.distance.x * rate, this.distance.y * rate);\n        let newP: cc.Vec2 = this.host.getPosition().add(l);\n        this.host.setPosition(newP);\n\n        this.ct += dt;\n    }\n}\n"]}