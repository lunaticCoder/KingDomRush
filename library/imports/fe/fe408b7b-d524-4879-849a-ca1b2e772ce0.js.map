{"version":3,"sources":["assets/scripts/levelScene/monster/monsterFactory.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAgC;AAChC,4DAAuD;AAEjD,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA4C,kCAAY;IAAxD;QAAA,qEAyFC;QAtFW,mBAAa,GAAgB,EAAE,CAAC;QAGhC,mBAAa,GAAkB,IAAI,CAAC;QAE5C;;WAEG;QACH,gBAAU,GAAa,EAAE,CAAC;QAClB,QAAE,GAAW,CAAC,CAAC;QACvB;;;WAGG;QACK,mBAAa,GAAkB,IAAI,CAAC;QAC5C;;WAEG;QACK,aAAO,GAAW,IAAI,CAAC;;IAoEnC,CAAC;IAlEG,+BAAM,GAAN;QACI,UAAU;QACV,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAChD,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;SAC7C;QAED,iBAAO,CAAC,eAAe,GAAG,EAAE,CAAC;IACjC,CAAC;IAED;;;OAGG;IACH,6BAAI,GAAJ,UAAK,OAAe;QAChB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAED,sCAAa,GAAb,UAAc,GAAW;QACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAED,sCAAa,GAAb;QACI,OAAO,iBAAO,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;YACvC,IAAI,CAAC,GAAY,iBAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC5C,CAAC,CAAC,GAAG,CAAC,iBAAO,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YAClC,CAAC,CAAC,WAAW,EAAE,CAAC;SACnB;IACL,CAAC;IAED,uCAAc,GAAd,UAAe,CAAU;QACrB,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;IAEO,uCAAc,GAAtB,UAAuB,GAAW;QAC9B,IAAI,CAAU,CAAC;QACf,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;YACpC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YAClC,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC;SACnB;;YAEG,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;QAEhD,IAAI,IAAI,GAAY,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACtB,iBAAO,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEnC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;IAC9G,CAAC;IAEO,wCAAe,GAAvB,UAAwB,GAAG,EAAE,GAAG;QAC5B,OAAO,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED,+BAAM,GAAN,UAAO,EAAE;QACL,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC;YACd,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE;gBACb,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;gBACZ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;aAChD;SAEJ;IACL,CAAC;IArFD;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;yDACQ;IAGxC;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,uBAAa,EAAE,CAAC;yDACU;IAN3B,cAAc;QADlC,OAAO;OACa,cAAc,CAyFlC;IAAD,qBAAC;CAzFD,AAyFC,CAzF2C,EAAE,CAAC,SAAS,GAyFvD;kBAzFoB,cAAc","file":"","sourceRoot":"/","sourcesContent":["import Monster from \"./monster\";\nimport AnimationPath from \"../../common/animationPath\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class MonsterFactory extends cc.Component {\n\n    @property({ type: [cc.Prefab] })\n    private monsterPrefab: cc.Prefab[] = [];\n\n    @property({ type: AnimationPath })\n    private animationPath: AnimationPath = null;\n\n    /**\n     * 待生成的怪物列表\n     */\n    creMonList: number[] = [];\n    private cT: number = 0;\n    /**\n     * [怪物编号][]\n     * 每次删除monster是将其回收到对象池中\n     */\n    private poolOfMonster: cc.NodePool[] = null;\n    /**\n     * 路径条数\n     */\n    private roadNum: number = null;\n\n    onLoad() {\n        //初始化怪物对象池\n        this.poolOfMonster = [];\n        for (let i = 0; i < this.monsterPrefab.length; i++) {\n            this.poolOfMonster[i] = new cc.NodePool();\n        }\n\n        Monster.monstersOfAlive = [];\n    }\n\n    /**\n     * Inits monster factory\n     * @param roadNum 路径条数\n     */\n    init(roadNum: number) {\n        this.creMonList = [];\n        this.cT = 0;\n        this.roadNum = roadNum;\n    }\n\n    createMonster(num: number) {\n        this.creMonList.push(num);\n    }\n\n    clearMonsters() {\n        while (Monster.monstersOfAlive.length > 0) {\n            let m: Monster = Monster.monstersOfAlive[0];\n            m.die(Monster.monstersOfAlive, m);\n            m.releaseSelf();\n        }\n    }\n\n    destroyMonster(m: Monster) {\n        this.poolOfMonster[m.monsterNo].put(m.node);\n    }\n\n    private _createMonster(num: number) {\n        let m: cc.Node;\n        if (this.poolOfMonster[num].size() > 0) {\n            m = this.poolOfMonster[num].get();\n            m.opacity = 255;\n        }\n        else\n            m = cc.instantiate(this.monsterPrefab[num]);\n\n        let mScr: Monster = m.getComponent(\"monster\");\n        this.node.addChild(m);\n        Monster.monstersOfAlive.push(mScr);\n\n        mScr.init(num, this.animationPath.getWorldPath(\"road\" + this.getRandomNumber(1, this.roadNum).toString()))\n    }\n\n    private getRandomNumber(min, max): number {\n        return min + Math.floor(Math.random() * (max - min + 1));\n    }\n\n    update(dt) {\n        if (this.creMonList.length > 0) {\n            this.cT += dt;\n            if (this.cT > 1) {\n                this.cT = 0;\n                this._createMonster(this.creMonList.shift());\n            }\n\n        }\n    }\n}\n"]}