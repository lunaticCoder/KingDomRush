{"version":3,"sources":["assets/scripts/selecttLevelScene/aSeriesSkill.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import GameDataStorage, { GameConfig, User } from \"../common/module/gameDataManager\";\nimport SelectLevelScene from \"./selectLevelScene\";\nimport SkillsBoard from \"./skillsBoard\";\n\nconst { ccclass, property } = cc._decorator;\n\n/**\n * 技能图标有3个状态：可以升级并且星星够、可以升级但星星不够、不能升级的灰色、已升级\n */\nexport enum SkillState { Upgradable, StarShort, Upgraded, UnUpgrade };\n\nexport class SkillIcon {\n    private state: SkillState;\n    private node: cc.Node;\n    /**\n     * bg节点下的cc.Button\n     */\n    private button: cc.Button;\n    private starNum: cc.Node;\n    private label: cc.Label;\n    private labelNode: cc.Node;\n\n    /**\n     * Creates an instance of skill icon.\n     * @param node 图标节点\n     * @param state 该技能状态\n     */\n    constructor(node: cc.Node, state: SkillState, upNeedStarNum: number) {\n        this.node = node;\n        this.button = node.getChildByName(\"bg\").getComponent(cc.Button);\n        this.starNum = node.getChildByName(\"starNum\");\n        this.labelNode = this.starNum.getChildByName(\"label\");\n        this.label = this.labelNode.getComponent(cc.Label);\n\n        this.setState(state);\n        this.setNeedStarNum(upNeedStarNum);\n    }\n\n    setState(state: SkillState) {\n        this.state = state;\n        switch (this.state) {\n            case SkillState.Upgradable: { //可以升级\n                this.button.interactable = true;\n                this.starNum.active = true;\n                this.labelNode.color = cc.Color.WHITE;\n                break;\n            }\n            case SkillState.StarShort: {\n                this.button.interactable = true;\n                this.starNum.active = true;\n                this.labelNode.color = cc.Color.RED;\n                break;\n            }\n            case SkillState.UnUpgrade: { //不能升级\n                this.button.interactable = false;\n                this.starNum.active = true;\n                this.labelNode.color = cc.Color.WHITE;\n                break;\n            }\n            case SkillState.Upgraded: { //已升级\n                this.button.interactable = true;\n                this.starNum.active = false;\n                this.labelNode.color = cc.Color.WHITE;\n                break;\n            }\n        }\n    }\n\n    getState(): SkillState {\n        return this.state;\n    }\n\n    getButton(): cc.Button {\n        return this.button;\n    }\n\n\n    private setNeedStarNum(n: number) {\n        this.label.string = n.toString();\n    }\n\n}\n\n@ccclass\nexport default class AseriesSkill extends cc.Component {\n\n    @property({ tooltip: \"这个是第几个技能，从1开始\" })\n    private skillNum: number = 1;\n    /**\n     * 每个技能有 5个 等级，即有5个Node\n     */\n    private skillNode: cc.Node[] = null;\n    private skillIcons: SkillIcon[] = [];\n    private gameConfig: GameConfig = null;\n    private user: User = null;\n    /**\n     * 当前玩家技能的等级\n     */\n    private skillLevel: number[] = null;\n    private selectLevelScene: SelectLevelScene = null;\n    private skillsUpNeedStar: number[][];\n    private skillsBoard: SkillsBoard = null;\n    onLoad() {\n        this.gameConfig = GameDataStorage.getGameConfig();\n        this.user = GameDataStorage.getCurrentUser();\n        this.skillLevel = this.user.getSkillsLevel();\n        this.skillNode = this.node.children;\n        this.selectLevelScene = cc.find(\"Canvas\").getComponent(\"selectLevelScene\");\n        this.skillsUpNeedStar = this.gameConfig.getSkillsUpNeedStar();\n        this.skillsBoard = cc.find(\"Canvas/centerAnchor/skillsBoard\").getComponent(\"skillsBoard\");\n    }\n\n    start() {\n\n        this.initskillIcons();\n\n    }\n\n    private initskillIcons() {\n        for (let i = 0; i < 5; i++) { //技能等级\n            let skillIcon: SkillIcon = new SkillIcon(this.skillNode[i], this.judgeSkillState(i + 1), this.skillsUpNeedStar[this.skillNum - 1][i]);\n            this.skillIcons.push(skillIcon);\n\n            //绑定按钮事件\n            let button: cc.Button = skillIcon.getButton();\n            let click_event = new cc.Component.EventHandler();\n\n            //添加响应事件的必要参数，即响应函数所在的节点、组件、函数\n            click_event.target = this.node;\n            click_event.component = \"aSeriesSkill\";\n            click_event.handler = \"upSkill\";\n            click_event.customEventData = i.toString();\n            button.clickEvents.push(click_event);\n        }\n    }\n\n    /**\n     * 更新技能树显示\n     */\n    updateSkillIcons() {\n        for (let i: number = 0; i < this.skillIcons.length; i++) {\n            this.skillIcons[i].setState(this.judgeSkillState(i + 1));\n        }\n    }\n\n    /**\n     * 升级技能等级\n     * @param levelNum 该技能升级到几级。1开始\n     */\n    upSkill(e, levelNum) {\n        levelNum = Number(levelNum);\n        if (levelNum <= this.skillLevel[this.skillNum - 1]) //该技能已升级\n            return;\n        let needStarN: number = this.skillsUpNeedStar[this.skillNum - 1][levelNum - 1];\n        let haveStarN: number = this.user.getCurrentHaveStarNum();\n        if (needStarN > haveStarN) //星星不够\n            return;\n\n        //更新内部数据\n        this.user.subHavedStar(needStarN);\n        this.skillLevel[this.skillNum - 1] = levelNum;\n        //更新技能树显示\n        this.skillIcons[levelNum - 1].setState(SkillState.Upgraded);\n        this.skillIcons[levelNum].setState(this.judgeSkillState(levelNum + 1));\n        //更新显示的星星数\n        this.selectLevelScene.updateScoreLabel();\n        //更新技能板上显示的星星数\n        this.skillsBoard.updateStarNum();\n    }\n\n    /**\n     * Judges skill state\n     * @param iconNum 一个技能的第几个等级,1开始\n     * @returns skill state \n     */\n    private judgeSkillState(iconNum: number): SkillState {\n        if (iconNum <= this.skillLevel[this.skillNum - 1]) //已升级\n            return SkillState.Upgraded;\n        if (iconNum === this.skillLevel[this.skillNum - 1] + 1) { //能升级\n            let need: number = this.skillsUpNeedStar[this.skillNum - 1][iconNum - 1];\n            let have: number = this.user.getCurrentHaveStarNum();\n            if (have >= need)//星星够\n                return SkillState.Upgradable;\n            else //星星不够\n                return SkillState.StarShort;\n        }\n\n        return SkillState.UnUpgrade; //不能升级\n    }\n\n\n}\n"]}