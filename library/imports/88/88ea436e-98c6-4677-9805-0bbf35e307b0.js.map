{"version":3,"sources":["assets/scripts/levelScene/monster/monster.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Creature from \"../creature\";\nimport CombatLogic from \"../combatLogic\";\nimport Soldier from \"../tower/barrack/soldier\";\nimport GameDataStorage, { GameConfig } from \"../../common/module/gameDataManager\";\nimport Utils from \"../../common/module/utils\";\nimport MonsterFactory from \"./monsterFactory\";\nimport LevelScene from \"../levelScene\";\nimport Move from \"../../common/move\";\nconst { ccclass, property } = cc._decorator;\n\nenum WalkState { Down, left, up, right }\n\n@ccclass\nexport default class Monster extends Creature {\n\n    @property({\n        type: [cc.SpriteFrame],\n        tooltip: \"怪物攻击帧动画图片\"\n    })\n    private attackFrame: cc.SpriteFrame[] = [];\n    @property({\n        type: [cc.SpriteFrame],\n        tooltip: \"怪物死亡帧动画图片\"\n    })\n    private deadFrame: cc.SpriteFrame[] = [];\n\n    @property({\n        type: [cc.SpriteFrame]\n    })\n    private downWalkFrames: cc.SpriteFrame[] = [];\n\n    @property({\n        type: [cc.SpriteFrame]\n    })\n    private rightWalkFrames: cc.SpriteFrame[] = [];\n\n    @property({\n        type: [cc.SpriteFrame]\n    })\n    private upWalkFrames: cc.SpriteFrame[] = [];\n\n\n    /* 引用对象 */\n    private monsterFactory: MonsterFactory = null;\n    private levelScene: LevelScene = null;\n\n    /* 属性 */\n    monsterNo: number = null;\n\n    /* 数据 */\n    public static monstersOfAlive: Monster[] = null;\n    /**\n     * [怪物编号]{HP,speedOfMove,intervalOfAttack,aggressivity,rangeOfAttack,rangeOfInvestigate,price}\n     */\n    private monsterData: any[] = null;\n    /**\n     * 移动路径 世界\n     */\n    private path: cc.Vec2[] = null;\n    /**\n     * 每段路需要的时间，[0]:path[0]->path[1]\n     */\n    private pathTime: number[] = [];\n\n    /* 控制 */\n    /**\n     * 要移动的目的地的path指针\n     */\n    private pathIndex: number = 0;\n    /**\n     * 路径移动的递归开关\n     * 控制递归与对外说明\n     */\n    swiOfRecursionInPW: boolean = false;\n    /**\n     * 是否在路径上移动\n     * 控制 是否需要回归路径点上S\n     */\n    private moveInPath: boolean = true;\n    private stateOfFA: WalkState = null;\n\n    onLoad() {\n        //对象/组件的赋值\n        this.combatLogic = new CombatLogic(this, Soldier.soldiersOfAlive);\n        this.monsterFactory = cc.find(\"Canvas/personMap\").getComponent(\"monsterFactory\");\n        this.levelScene = cc.find(\"Canvas\").getComponent(\"levelScene\");\n        this._move = new Move(this.node);\n\n        //怪物数据\n        let gameConfig: GameConfig = GameDataStorage.getGameConfig();\n        this.monsterData = gameConfig.getMonsterData();\n    }\n\n    init(monsterNo: number, path: cc.Vec2[]) {\n        //初始化属性\n        this.monsterNo = monsterNo;\n        let md: any = this.monsterData[monsterNo];\n        this.maxHp = this.cHP = md.HP;\n        this.speedOfMove = md.speedOfMove;\n        this.intervalOfAttack = md.intervalOfAttack;\n        this.aggressivity = md.aggressivity;\n        this.rangeOfAttack = md.rangeOfAttack;\n        this.rangeOfInvestigate = md.rangeOfInvestigate;\n        this.intervalOfThink = md.intervalOfThink;\n\n        //初始化数据\n        this.path = path;\n        this.initPathTime();\n\n        //初始化视图\n        this.frameAnim.setSpriteFrame(this.downWalkFrames[0]);\n        this.refreshBloodBar();\n        this.node.setPosition(this.node.parent.convertToNodeSpaceAR(this.path[0]));\n\n        //初始化控制参数\n        this.pathIndex = 1;\n        this.swiOfRecursionInPW = false;\n        this.moveInPath = true;\n        this.stateOfFA = null;\n        this.initCreature();\n    }\n\n    /**\n     * 从现在开始，经time后的坐标\n     * @param t \n     * @returns pos 世界\n     */\n    getPosInTime(t: number): cc.Vec2 {\n        let cI: number = this.pathIndex; //当前目的点的path指针\n        let cP: cc.Vec2 = this.getWPos();\n        let ct: number = this.path[cI].sub(cP).mag() / this.speedOfMove;\n        t -= ct;\n\n        while (true) {\n            ct = this.pathTime[cI + 1];\n            t -= ct;\n            if (t < 0)\n                break;\n            cI++;\n        }\n\n        //多出的一点时间不足以抵达下一个点，就不要了\n        return this.path[cI];\n    }\n    /**\n     * 初始化pathTime\n     */\n    private initPathTime() {\n        for (let i = 0; i < this.path.length - 1; i++) {\n            let l: number = this.path[i + 1].sub(this.path[i]).mag();\n            this.pathTime[i] = l / this.speedOfMove;\n        }\n    }\n\n    /**\n     * 不会自动停止播放行走动画\n     * @param des 世界\n     */\n    walk(des: cc.Vec2, func: Function = null, t: number = null) {\n        let dis: cc.Vec2 = des.sub(this.getWPos());\n        this.playWalk(dis);\n\n        this.move(des, func, t);\n    }\n\n    protected stopWalk() {\n        this.frameAnim.stop();\n        this.stateOfFA = null;\n        this._move.stopMove();\n    }\n\n    /**\n     * 播放行走动画,自动判断是否需要重置动画\n     * @param l 行走方向\n     */\n    private playWalk(l: cc.Vec2) {\n        let state: WalkState = this.getWalkState(l);\n        if (state === this.stateOfFA)\n            return;\n\n        this.stateOfFA = state;\n        switch (state) {\n            case WalkState.Down: {\n                this.frameAnim.setFrameArray(this.downWalkFrames);\n                break;\n            }\n            case WalkState.up: {\n                this.frameAnim.setFrameArray(this.upWalkFrames);\n                break;\n            }\n            case WalkState.left: {\n                this.frameAnim.setFrameArray(this.rightWalkFrames);\n                this.node.scaleX = -1;\n                break;\n            }\n            case WalkState.right: {\n                this.frameAnim.setFrameArray(this.rightWalkFrames);\n                this.node.scaleX = 1;\n            }\n        }\n        this.frameAnim.play(true);\n    }\n    /**\n     * 得到 人物应该使用哪种行走\n     * @param l 移动方向\n     * @returns walk state \n     */\n    private getWalkState(l: cc.Vec2): WalkState {\n        let degree: number = this.getDegree(l);\n        if (degree >= 30 && degree <= 150) {\n            return WalkState.up;\n        }\n        else if (degree >= 210 && degree <= 330) {\n            return WalkState.Down;\n        }\n        else if (l.x > 0)\n            return WalkState.right;\n        else\n            return WalkState.left;\n    }\n    /**\n     * Gets degree\n     * @param dir 方向向量\n     * @returns degree [0,360)\n     */\n    private getDegree(dir: cc.Vec2): number {\n        let rot: number;\n        if (dir.x === 0 && dir.y > 0) //y上半轴\n            rot = 90;\n        else if (dir.x === 0 && dir.y < 0) //y下半轴\n            rot = 270;\n        else {\n            let r: number = Math.atan(dir.y / dir.x);\n            let d: number = r * 180 / Math.PI;\n            rot = d;\n        }\n\n        if (rot === 0) //在x轴上\n            if (dir.x > 0)\n                rot = 0;\n            else\n                rot = 180;\n        else if (dir.x < 0 && dir.y > 0 || dir.x < 0 && dir.y < 0) //在第二三象限\n            rot += 180;\n        else if (dir.x > 0 && dir.y < 0) //在第四象限\n            rot += 360;\n        return rot;\n    }\n\n    protected refreshState() {\n        this.refreshBloodBar();\n\n        //死亡    \n        if (this.cHP === 0) {\n            this.die(Monster.monstersOfAlive, this);\n            this.playDie(this.deadFrame, this.releaseSelf.bind(this));\n            this.levelScene.addCash(this.monsterData[this.monsterNo].price);\n        }\n    }\n\n    releaseSelf() {\n        this.monsterFactory.destroyMonster(this);\n    }\n\n    /**\n     * 使用前需 this.swiOfRecursionInPW = true\n     * @returns  \n     */\n    protected walkInPath() {\n        if (!this.swiOfRecursionInPW)\n            return;\n\n        if (!this.moveInPath) { //回归路径点\n            this.pathIndex = this.getPosOfMinDisWithPath();\n            this.walk(this.path[this.pathIndex], this.walkCallBack.bind(this));\n            this.moveInPath = true;\n        }\n        else //从路径点移动到路径点\n            this.walk(this.path[this.pathIndex], this.walkCallBack.bind(this), this.pathTime[this.pathIndex - 1])\n\n    }\n    private walkCallBack() {\n        if (this.pathIndex === this.path.length - 1) {\n            console.log(\"怪物跳脱\");\n            this.levelScene.subHP();\n            this.stopWalkInPath();\n            this.die(Monster.monstersOfAlive, this);\n            this.releaseSelf();\n        }\n        this.pathIndex++;\n        this.walkInPath();\n    }\n    /**\n     * 得到离路径上最近的路径点指针\n     */\n    private getPosOfMinDisWithPath(): number {\n        let cwp: cc.Vec2 = this.getWPos();\n        let l: number = Utils.getDisOfTwoPos(cwp, this.path[this.pathIndex]);\n        let j: number = this.pathIndex;\n        for (let i = this.pathIndex + 1; i < this.path.length; i++) {\n            let tl: number = Utils.getDisOfTwoPos(cwp, this.path[i]);\n            if (tl < l) {\n                l = tl;\n                j = i;\n            }\n            else\n                break;\n        }\n        return j;\n    }\n\n    /**\n     * 关闭walkInPath()的递归移动，停止行走\n     */\n    private stopWalkInPath() {\n        this.swiOfRecursionInPW = false;\n        this.moveInPath = false;\n        this.stopWalk();\n    }\n\n\n    track(pos: cc.Vec2) {\n        this.isTracking = true;\n        this.walk(pos, function () {\n            this.isTracking = true;\n            this.stopWalk();\n        }.bind(this))\n    }\n    stopTrack() {\n        this.isTracking = false;\n        this.stopWalk();\n    }\n    refreshTrackTarget(pos: cc.Vec2) {\n        this.walk(pos, function () {\n            this.isTracking = true;\n            this.stopWalk();\n        }.bind(this))\n    }\n\n    attack(m: Creature) {\n        this.isAttacking = true;\n\n        this.frameAnim.setFrameArray(this.attackFrame);\n        this.frameAnim.play(false, false, false, function () {\n            m.injure(this.aggressivity);\n            this.isAttacking = false;\n        }.bind(this));\n\n    }\n\n    nonComLogic() {\n        this.isNonComState = true;\n        //已经在执行路径上行走了\n        if (this.swiOfRecursionInPW)\n            return;\n        this.swiOfRecursionInPW = true;\n        this.walkInPath();\n    }\n    stopNonComLogic() {\n        this.stopWalkInPath();\n        this.isNonComState = false;\n    }\n\n\n}\n"]}