{"version":3,"sources":["assets/scripts/levelScene/tower/barrack/barrack.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import FrameAnimation from \"../../../common/frameAnimation\";\nimport Soldier from \"./soldier\";\nimport Utils from \"../../../common/module/utils\";\nimport GameDataStorage, { GameConfig } from \"../../../common/module/gameDataManager\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Barrack extends cc.Component {\n\n    @property({\n        type: cc.Prefab\n    })\n    private soldierPrefab: cc.Prefab = null;\n\n    @property({ tooltip: \"出兵点, 节点坐标\" })\n    private outSoldierPos: cc.Vec2 = cc.v2(0, 0);\n\n    @property({\n        type: [cc.SpriteFrame]\n    })\n    private tower1: cc.SpriteFrame[] = [];\n    @property({\n        type: [cc.SpriteFrame]\n    })\n    private tower2: cc.SpriteFrame[] = [];\n    @property({\n        type: [cc.SpriteFrame]\n    })\n    private tower3: cc.SpriteFrame[] = [];\n    @property({\n        type: [cc.SpriteFrame]\n    })\n    private tower4: cc.SpriteFrame[] = [];\n\n    private BGFrameAnim: FrameAnimation = null;\n    private personMap: cc.Node = null;\n\n\n    /* 塔的属性 */\n    level: number = 1;\n    maxLevel: number = 4;\n    private maxNumOfSoldier: number = 3;\n    /**\n     * 出兵时间\n     */\n    private tOfCreateSoldier: number;\n    price: number;\n\n    /* 数据 */\n    /**\n     * 可用的驻点编号\n     */\n    private availableStationNo: number[] = null;\n    /**\n     * 塔的帧动画图片\n     */\n    private towerFrames = [];\n    stationOfSoldier: cc.Vec2[];\n    private soldierPool: cc.NodePool;\n    private createdSoldiers: Soldier[] = [];\n    private dataOfTower: any[];\n\n    /* 控制 */\n    /**\n     * 是否在造兵\n     */\n    private creSoldEnable: boolean = true;\n\n    onLoad() {\n        this.towerFrames.push(this.tower1);\n        this.towerFrames.push(this.tower2);\n        this.towerFrames.push(this.tower3);\n        this.towerFrames.push(this.tower4);\n\n        this.BGFrameAnim = this.node.getChildByName(\"bg\").getComponent(\"frameAnimation\");\n        this.personMap = cc.find(\"Canvas/personMap\");\n        this.createSoldierPool();\n\n        let gc: GameConfig = GameDataStorage.getGameConfig();\n        this.dataOfTower = gc.getDataOfBarrack();\n    }\n\n    start() {\n        this.init();\n\n\n    }\n\n    /**\n     * 根据等级设置 动画。\n     */\n    init() {\n        this.tOfCreateSoldier = this.dataOfTower[this.level - 1].tOfCreateSoldier;\n        this.price = this.dataOfTower[this.level - 1].price;\n        this.availableStationNo = [0, 1, 2];\n        this.refreshFrameAnim();\n    }\n\n    /**\n     * 更新帧动画\n     */\n    private refreshFrameAnim() {\n        this.BGFrameAnim.setFrameArray(this.towerFrames[this.level - 1]);\n        this.BGFrameAnim.setSpriteFrame(this.towerFrames[this.level - 1][0]);\n    }\n\n    private createSoldierPool() {\n        this.soldierPool = new cc.NodePool();\n        for (let i = 0; i < this.maxNumOfSoldier; i++) {\n            let n: cc.Node = cc.instantiate(this.soldierPrefab);\n            this.soldierPool.put(n);\n        }\n    }\n\n    /**\n     * 释放士兵资源\n     * @param soldier \n     */\n    releaseSoldier(soldier: Soldier) {\n        this.availableStationNo.push(soldier.stationNo);\n        Utils.remvoeItemOfArray(this.createdSoldiers, soldier);\n        this.soldierPool.put(soldier.node);\n    }\n\n    destroySelf() {\n        //删除塔生成的所有士兵\n        while (this.createdSoldiers.length > 0) {\n            let s: Soldier = this.createdSoldiers[0];\n            s.die(Soldier.soldiersOfAlive, s);\n            s.releaseSelf();\n        }\n\n        //清空对象池\n        this.soldierPool.clear();\n\n        this.node.destroy();\n    }\n\n    /**\n     * 升级\n     */\n    upgrade() {\n        if (this.level === 4)\n            return;\n        this.level++;\n        this.tOfCreateSoldier = this.dataOfTower[this.level - 1].tOfCreateSoldier;\n        this.price = this.dataOfTower[this.level - 1].price;\n        this.refreshFrameAnim();\n    }\n\n    getPriceOfUpgrade(): number {\n        return this.dataOfTower[this.level].price;\n    }\n\n    getDataOfTower(): any[] {\n        return this.dataOfTower;\n    }\n\n    private autoOutSoldier() {\n        if (this.creSoldEnable && this.createdSoldiers.length < this.maxNumOfSoldier) {\n            this.creSoldEnable = false;\n            this.scheduleOnce(this.outSoldier.bind(this), this.tOfCreateSoldier);\n        }\n    }\n    /**\n     * 出兵\n     * @param station 兵的驻点 世界坐标\n     */\n    private outSoldier() {\n        this.BGFrameAnim.play(false, false, false, function () {\n            let s: Soldier = this.createSoldier();\n\n            this.BGFrameAnim.play(false, false, true, function () {\n                this.creSoldEnable = true;\n            }.bind(this))\n        }.bind(this));\n    }\n    private createSoldier(): Soldier {\n        let node: cc.Node = this.getSoldierInPool();\n        let s: Soldier = node.getComponent(\"soldier\");\n        this.createdSoldiers.push(s);\n        Soldier.soldiersOfAlive.push(s);\n        this.personMap.addChild(node);\n\n        let outPos: cc.Vec2 = this.node.convertToWorldSpaceAR(this.outSoldierPos);\n        outPos = this.personMap.convertToNodeSpaceAR(outPos);\n        node.setPosition(outPos);\n\n        let i: number = this.availableStationNo.pop();\n        s.init(i, this.stationOfSoldier[i], this.level, this);\n        return s;\n    }\n    private getSoldierInPool(): cc.Node {\n        let n: cc.Node;\n        if (this.soldierPool.size() > 0) {\n            n = this.soldierPool.get();\n            n.opacity = 255;\n        }\n        else\n            n = cc.instantiate(this.soldierPrefab);\n        return n;\n    }\n\n    update(dt) {\n        this.autoOutSoldier();\n    }\n}\n"]}