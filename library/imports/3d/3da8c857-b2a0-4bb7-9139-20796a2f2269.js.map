{"version":3,"sources":["assets/res/prefabs/switch/audioSwitch.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,8EAAyE;AAEnE,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAyC,+BAAY;IAArD;QAAA,qEA+EC;QA1EW,cAAQ,GAAmB,IAAI,CAAC;QAIhC,aAAO,GAAmB,IAAI,CAAC;QAI/B,eAAS,GAAmB,IAAI,CAAC;QAIjC,cAAQ,GAAmB,IAAI,CAAC;QAKhC,iBAAW,GAAc,IAAI,CAAC;QAK9B,kBAAY,GAAc,IAAI,CAAC;;QAmDvC,iBAAiB;IACrB,CAAC;IAlDG,4BAAM,GAAN;IACA,CAAC;IAED,2BAAK,GAAL;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAEO,gCAAU,GAAlB;QACI,IAAI,WAAW,GAAY,uBAAa,CAAC,GAAG,CAAC,SAAS,CAAC;QACvD,IAAI,YAAY,GAAY,uBAAa,CAAC,GAAG,CAAC,YAAY,CAAC;QAC3D,IAAI,WAAW;YACX,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;;YAE7C,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;QAEhD,IAAI,YAAY;YACZ,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;;YAE/C,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;IACtD,CAAC;IAED,uCAAiB,GAAjB;QACI,IAAI,KAAK,GAAY,uBAAa,CAAC,GAAG,CAAC,SAAS,CAAC;QACjD,IAAI,KAAK,EAAE;YACP,uBAAa,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;YAC5B,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;SAE/C;aACI,EAAE,IAAI;YACP,uBAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;YAC7B,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;SAEhD;IACL,CAAC;IAED,yCAAmB,GAAnB;QACI,IAAI,KAAK,GAAY,uBAAa,CAAC,GAAG,CAAC,YAAY,CAAC;QACpD,IAAI,KAAK,EAAE,EAAE,KAAK;YACd,uBAAa,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;YAC/B,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;SAEjD;aACI;YACD,uBAAa,CAAC,GAAG,CAAC,WAAW,EAAE,CAAA;YAC/B,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;SAElD;IACL,CAAC;IAvED;QAHC,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,WAAW;SACvB,CAAC;iDACsC;IAIxC;QAHC,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,WAAW;SACvB,CAAC;gDACqC;IAIvC;QAHC,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,WAAW;SACvB,CAAC;kDACuC;IAIzC;QAHC,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,WAAW;SACvB,CAAC;iDACsC;IAKxC;QAHC,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,MAAM;SAClB,CAAC;oDACoC;IAKtC;QAHC,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,MAAM;SAClB,CAAC;qDACqC;IA3BtB,WAAW;QAD/B,OAAO;OACa,WAAW,CA+E/B;IAAD,kBAAC;CA/ED,AA+EC,CA/EwC,EAAE,CAAC,SAAS,GA+EpD;kBA/EoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["import SoundsManager from \"../../../scripts/common/module/soundsManager\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class AudioSwitch extends cc.Component {\n\n    @property({\n        type: cc.SpriteFrame\n    })\n    private musicOff: cc.SpriteFrame = null;\n    @property({\n        type: cc.SpriteFrame\n    })\n    private musicOn: cc.SpriteFrame = null;\n    @property({\n        type: cc.SpriteFrame\n    })\n    private effectOff: cc.SpriteFrame = null;\n    @property({\n        type: cc.SpriteFrame\n    })\n    private effectOn: cc.SpriteFrame = null;\n\n    @property({\n        type: cc.Sprite\n    })\n    private musicSwitch: cc.Sprite = null;\n\n    @property({\n        type: cc.Sprite\n    })\n    private effectSwitch: cc.Sprite = null;\n\n    onLoad() {\n    }\n\n    start() {\n        this.initSwitch();\n    }\n\n    private initSwitch() {\n        let isMusicMute: boolean = SoundsManager.ins.IsBGMMute;\n        let isEffectMute: boolean = SoundsManager.ins.IsEffectMute;\n        if (isMusicMute)\n            this.musicSwitch.spriteFrame = this.musicOff;\n        else\n            this.musicSwitch.spriteFrame = this.musicOn;\n\n        if (isEffectMute)\n            this.effectSwitch.spriteFrame = this.effectOff;\n        else\n            this.effectSwitch.spriteFrame = this.effectOn;\n    }\n\n    musicSwitchButton() {\n        let state: boolean = SoundsManager.ins.IsBGMMute;\n        if (state) {\n            SoundsManager.ins.openBGM();\n            this.musicSwitch.spriteFrame = this.musicOn;\n\n        }\n        else { //有声\n            SoundsManager.ins.closeBGM();\n            this.musicSwitch.spriteFrame = this.musicOff;\n\n        }\n    }\n\n    effecttSwitchButton() {\n        let state: boolean = SoundsManager.ins.IsEffectMute;\n        if (state) { //无音效\n            SoundsManager.ins.openEffect();\n            this.effectSwitch.spriteFrame = this.effectOn;\n\n        }\n        else {\n            SoundsManager.ins.closeEffect()\n            this.effectSwitch.spriteFrame = this.effectOff;\n\n        }\n    }\n\n    // update (dt) {}\n}\n"]}